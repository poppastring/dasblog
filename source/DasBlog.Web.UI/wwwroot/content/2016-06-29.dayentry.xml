<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2016-06-28T18:00:00-06:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;For the past few months I have been almost exclusively using &lt;a href="https://developer.microsoft.com/en-us/windows/hardware/windows-driver-kit"&gt;WinDbg&lt;/a&gt; to debug high severity production issues. It represents analysis on those gnarly situations that only volume stressed environments encounter. Almost by definition these situations rarely yield the whole story from single log files, even with the best intentions and foresight, memory dumps become the most direct and detailed way to see how your application is performing.  &lt;p&gt;One of the first things you do in WinDbg is load the correct version of &lt;a href="https://msdn.microsoft.com/en-us/library/bb190764.aspx"&gt;SOS debugging extension&lt;/a&gt;, ideally it would be one of the following commands which is based on the .NET version you are running.&lt;/p&gt; &lt;p align="center"&gt; &lt;table cellspacing="0" cellpadding="2" width="65%" border="0"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td valign="top" width="25%"&gt;&lt;strong&gt;.NET Framework version&lt;/strong&gt;&lt;/td&gt; &lt;td valign="top" width="25%"&gt;&lt;strong&gt;CLR version&lt;/strong&gt;&lt;/td&gt; &lt;td valign="top" width="25%"&gt;&lt;strong&gt;CLR filename&lt;/strong&gt;&lt;/td&gt; &lt;td valign="top" width="25%"&gt;&lt;strong&gt;WinDbg Command&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="25%"&gt;1.1&lt;/td&gt; &lt;td valign="top" width="25%"&gt;1.1&lt;/td&gt; &lt;td valign="top" width="25%"&gt;mscorwks.dll&lt;/td&gt; &lt;td valign="top" width="25%"&gt;.load clr10\sos&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="25%"&gt;2.0&lt;/td&gt; &lt;td valign="top" width="25%"&gt;2.0&lt;/td&gt; &lt;td valign="top" width="25%"&gt;mscorwks.dll&lt;/td&gt; &lt;td valign="top" width="25%"&gt;.loadby sos mscorwks&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="25%"&gt;3.0&lt;/td&gt; &lt;td valign="top" width="25%"&gt;2.0&lt;/td&gt; &lt;td valign="top" width="25%"&gt;mscorwks.dll&lt;/td&gt; &lt;td valign="top" width="25%"&gt;.loadby sos mscorwks&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="25%"&gt;3.5&lt;/td&gt; &lt;td valign="top" width="25%"&gt;2.0&lt;/td&gt; &lt;td valign="top" width="25%"&gt;mscorwks.dll&lt;/td&gt; &lt;td valign="top" width="25%"&gt;.loadby sos mscorwks&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="25%"&gt;4.0&lt;/td&gt; &lt;td valign="top" width="25%"&gt;4.0&lt;/td&gt; &lt;td valign="top" width="25%"&gt;clr.dll&lt;/td&gt; &lt;td valign="top" width="25%"&gt;.loadby sos clr&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign="top" width="25%"&gt;4.5&lt;/td&gt; &lt;td valign="top" width="25%"&gt;4.0&lt;/td&gt; &lt;td valign="top" width="25%"&gt;clr.dll&lt;/td&gt; &lt;td valign="top" width="25%"&gt;.loadby sos clr&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt; &lt;p&gt;Now for every CLR version there is a specific Data access component (DAC, mscordacwks.dll). The DAC is the layer that SOS uses to talk to the managed runtime, and if the correct version cannot be located, because say an MS patch has updated it then you get to see a message like this: &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;Failed to load data access DLL, 0x80004005&lt;br&gt;&lt;/strong&gt;Verify that 1) you have a recent build of the debugger (6.2.14 or newer)&lt;br&gt;2) the file mscordacwks.dll that matches your version of mscorwks.dll is&lt;br&gt;in the version directory&lt;br&gt;3) or, if you are debugging a dump file, verify that the file&lt;br&gt;mscordacwks_&amp;lt;arch&amp;gt;_&amp;lt;arch&amp;gt;_&amp;lt;version&amp;gt;.dll is on your symbol path.&lt;br&gt;4) you are debugging on the same architecture as the dump file.&lt;br&gt;For example, an IA64 dump file must be debugged on an IA64&lt;br&gt;machine.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;The most direct solutions are centered around step 2 and 3, that is, getting the correct version of mscordacwks.dll. We can start by running &lt;strong&gt;.cordll -ve -u -l&lt;/strong&gt; to get information about what version is loaded and is trying to load. Let us assume for a moment that its supposed to be 4.6.1080.0,  &lt;ol&gt; &lt;li&gt;On the server you performed the hang dump find the &lt;em&gt;mscordacwks.dll&lt;/em&gt; and &lt;em&gt;SOS.dll&lt;/em&gt; in the framework directory, for example C:\Windows\Microsoft.NET\Framework64\v4.0.30319.&lt;/li&gt; &lt;li&gt;Copy the files to a folder but also rename mscordacwks.dll as follows C:\hangdump\v4.0.30319\mscordacwks_x64_x64_4.0.30319.dll.&lt;/li&gt; &lt;li&gt;Go to &lt;em&gt;File&amp;gt;Symbol File Path&lt;/em&gt; and add the folder reference you created in step 2.&lt;/li&gt; &lt;li&gt;Load SOS extension as follows &lt;em&gt;.load C:\hangdump\v4.0.30319\SOS.dll&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;Try running an SOS command like, &lt;em&gt;!DumpHeap –stat&lt;/em&gt;.&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;To be honest the above is a really surgical approach to this problem and has worked for me, however, you can apply a little more brute force by simply running the &lt;strong&gt;!analyze –v&lt;/strong&gt; command. If you are pointing at Microsoft’s symbol server it will automatically pull down and load the appropriate DAC version on your behalf. &lt;p&gt;Happy debugging! </Content>
      <Created>2016-06-28T21:06:14.8870513-06:00</Created>
      <Modified>2016-06-28T21:06:14.8870513-06:00</Modified>
      <EntryId>18680b42-e3a4-49cb-a346-dfc6748dad37</EntryId>
      <Description />
      <Title>WinDbg Tip:Failed to load data access DLL</Title>
      <Categories>Debugging</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>